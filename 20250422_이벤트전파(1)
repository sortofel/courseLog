<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=<device-width>, initial-scale=1.0">
    <title>Document</title>
    <style>
        ul {background:lightgray}
        li {background:lightblue}
    </style>
</head>
<body>
    <h1>01. 이벤트 전파</h1>
    <pre>
        생성 된 이벤트 객체는 이벤트를 발생시킨  DOM 요소인 이벤트 타깃(event target)을 중심으로
        DOM 트리를 통해 전파된다
        1. 캡처링 단계 : 이벤트가 상위 요소에서 하위 요소 방향으로 전파
        2. 타깃 단계: 이벤트가 이벤트 타깃에 도달
        3. 버블링 단계: 이벤트가 하위 요소에서 상위 요소 방향으로 전파
    </pre>

    <ul id="drink">
        <li>커피</li>
        <li>콜라</li>
        <li>우유</li>
    </ul>

    <script>
        const $drink = document.getElementById('drink')

        //ul 영역 클릭 시-> 2: 타킷 단계,
        //li 영역 클릭 시 -> 3: 버블링 단계
        $drink.addEventListener('click', e=>{
            console.log(e.eventPhase);
            console.log(e.target);
            console.log(e.currentTarget);
        });
    </script>

    <pre>
        이벤트 핸들러 어트리뷰트/프로퍼티 방식으로 등록한 이벤트 핸들러는 타깃 단계와 버블링 단계의 이벤트만 캐치할 수 있지만
        addEventListener 메소드 방식으로 등록한 이벤트 핸들러는 3번째 인수로 true를 전달하면
        캡처링 단계의 이벤트도 캐치할 수 있다.
    </pre>

    <ul id="food">
        <li>김치찌개</li>
        <li>된장찌개</li>
        <li>고등어구이</li>
    </ul>

    <script>
        const $food = document.getElementById('food');

        $food.addEventListener('click', e => {
            console.log(e.eventPhase);
            console.log(e.target);
            console.log(e.currentTarget);
        }, true);

        $food.addEventListener('click', e => {
            console.log(e.eventPhase);
            console.log(e.target);
            console.log(e.currentTarget);
        });
    </script>

</body>
</html>

//실습

*1
<h1>Bold type...</h1> //~<h6></h6>, 글자
ㄴ<pre>simple text...</pre>

*2
<ul> //listing method without order, 중첩 가능
    <li>number 1</li>
    <li>number 2</li>
    <li>number 3</li>
</ul>

**2-(1)
<ul id="smt"> //list의 id를 smt으로 지정
    <li>number 1</li>
    <li>number 2</li>
    <li>number 3</li>
</ul>

<script>
    const $smt = document.getElementById('smt'); //id값으로 smt을 가져옴

    $smt.addEventListener('click', e => {    //이벤트를 적용할 위치.addEventListener()
        console.log(e.eventPhase);
        console.log(e.target);
        console.log(e.currentTarget); //f12(개발자도구)의 console 창에서 확인할 값들 (여기선 세 개)
        },true);
</script> 
