1. literal (보이는 그대로의 값)
   <값의 개념>
    1) 정수 (1)
    2) 실수 (0.1)
    3) '문자' ('a') - ' ', 'ab'; 빈 문자, 두 문자 이상 x
    4) "문자열" ("a") - " ", "ab"; 빈 문자, 두 문자 이상 o
       ㄴ 같은 a 여도 따옴표에 따라 문자, 문자열로 인식함
    5) 논리 (true or false)

* 출력 명령어: sout (System.out.println())
  예) System.out.println(1); //정수 1을 출력
            soutv ((System.out.println("args = " + args);))

  copy: command+d
  run: contrl+r


    <값의 연산>
    1) 정수, 실수, 문자는 모든 사칙연산 가능. 문자의 경우 유니코드로 환산된 값으로 계산된다.
                                      *A=65, a=97
                                      'a' + 'b' = 195

    2) 문자열은 이어붙이기로 처리됨
       "hello" + "world"
    
    3) 문자열과 정수는 '+'만 가능
       "helloworld" + 1
    
    4) 논리값의 연산
       모든 사칙연산 불가능, + " " 로 이어붙이기는 가능함.
       예) true + "a"
    
    <문자열 합의 규칙>
     = 연산 방향은 왼쪽에서 오른쪽이다. 같은 문자를 계산해도 순서에 따라 결과가 달라진다.
     예) 1 + 2 + "3" //33
        "1" + 2 + 3 //123 *맨 앞이 문자열이라 문자열이 되어 글자들이 이어붙이기 처리됨
        "1" + (2+3) //15 *괄호 안의 수식은 문자열과 다른 수식으로 처리됨
    
    +응용
     "num1과 num2의 합은" + (num1 + num2) + "입니다."; //사용자가 보기 편하게 함


2. Variable (변수)
    <변수의 목적>
    1) 의미 부여
    2) 재사용
    3) 변화하는 값 사용 (variation)
       int num1 = 20
       num1 = num1 + 0.1
       ...
    
    <변수 사용법>
    1) 선언: 변수를 준비한다. 
    2) 대입 및 초기화: 변수의 값을 대입(초기화) 한다.
    3) 변수를 사용한다.

    <변수의 종류: 기본자료형 8가지>
    _; 숫자 형태의 값을 그대로 사용
    *; 대표 자료형


    1) 숫자 취급
        _byte bnum; //1byte
        _short snum; //2byte
        _*int inum; //4byte
        long lnum = 1L; //8byte
    
    2) 실수 취급
        float fnum = 1f; //4byte
        _*double dnum; //8byte
    
    3) 문자 취급
        char ch; //2byte
        char ch2;
    
    4) 논리값 취급
        boolean isTrue; //1byte
    
    5) 문자열 취급
        String str; //4byte

    *long-L, float-f를 뒤에 붙여줘야 하는 점 주의
     기본자료형의 이름과 byte값 암기할 것

     <변수 명명규칙-x>
     *필수
     1) 동일한 범위 내의 동일한 변수명 x
     2) reserved 된 언어 x (inst, long 등)
     3) 대소문자 구분 (true=/=True)
     4) 숫자로 시작 x (1name;x. name1 or na1me)
     5) 사용 가능한 특수 기호: _, $

     *암묵적 규칙
     1) 길이는 무관하나, 적당한 길이
     2) camelCase
     3) 단어_사이_연결_언더스코어_금지
     4) 변수명은 영어
     5) 변수값의 의미 표현
     6) 전형적인 변수 이름 사용 (username, comment)
     7) 명사형으로 작성 (goingToResult;x, toResult)
     8) boolean 작성시 긍정형태 (isFale = false;x. isSuccess = true;0)
